score_name_child <- 'FGM'
hist(
as.numeric(sort_score_p[,score_name_child]),
breaks='Scott',
main=paste('Histogram of Playoffs' ,score_name_child),
xlab=paste('Playoffs',score_name_child)
)
# check the distribution shape
score_name_child <- 'FGM'
hist(
as.numeric(sort_score_p[,score_name_child]),
# breaks='Scott',
breaks=20,
main=paste('Histogram of Playoffs' ,score_name_child),
xlab=paste('Playoffs',score_name_child)
)
# check the distribution shape
score_name_child <- 'FGM'
hist(
as.numeric(sort_score_p[,score_name_child]),
# breaks='Scott',
breaks=10,
main=paste('Histogram of Playoffs' ,score_name_child),
xlab=paste('Playoffs',score_name_child)
)
-log(likelihood_htoh[,'FGM'])
mean(-log(likelihood_htoh[,'FGM']))
mean(-log(likelihood_lBayes[,'FGM']))
mean(-log(likelihood_of[,'FGM']))
mean(-log(likelihood_of_p[,'FGM']))
mean(-log(likelihood_lBayes_p[,'FGM']))
mean(-log(likelihood_mBayes_p[,'FGM']))
mean(-log(likelihood_sBayes_p[,'FGM']))
mean(-log(likelihood_setBayes_p[,'FGM']))
set.seed(7)
score_strong <- rnorm(100, mean=70, sd=10)
score_normal <- rnorm(100, mean=80, sd=10)
score_weak <- rnorm(100, mean=90, sd=10)
score_full <- c(score_strong, score_normal, score_weak)
hist(score_gull)
hist(score_hull)
hist(score_full)
mean(score_full)
source('~/Rworks/NBA/NBA_artif.R')
summary(lh_full)
summary(lh_each)
mean(lh_full)
mean(lh_each)
boxplot(lh_full, lh_each)
source('~/Rworks/NBA/NBA_artif.R')
hist(score_full)
hist(score_full, breaks='Scott')
hist(score_full, breaks=30)
hist(score_full, breaks=10)
source('~/Rworks/NBA/NBA_artif.R')
source('~/Rworks/NBA/NBA_artif.R')
curve(dnorm(x, mean=80, sd=10))
curve(dnorm(x, mean=80, sd=10), xlim=c(40,120))
hist(score_full)
hist(score_full, breaks=20)
hist(score_full, breaks=30)
match_num <- 100
score_strong <- rnorm(match_num, mean=70, sd=10)
score_normal <- rnorm(match_num, mean=80, sd=10)
score_weak <- rnorm(match_num, mean=90, sd=10)
score_full <- c(score_strong, score_normal, score_weak)
hist(score_full, breaks=30)
curve(dnorm(x, mean=80, sd=10), add=T)
curve(dnorm(x, mean=80, sd=10), new=T)
score_name_child <- 'FGM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=score_name_child)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child]))
)
score_name_child <- 'TPM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=score_name_child)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child]))
, add=T)
score_name_child <- 'TPM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=score_name_child)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child])),
add=T,
main=paste(score_name_child, histogram),
xlab=score_name_child
)
score_name_child <- 'TPM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=paste(score_name_child, histogram),
xlab=score_name_child
)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child])),
add=T
)
score_name_child <- 'TPM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=paste(score_name_child, histogram),
xlab=score_name_child
)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child])),
add=T
)
score_name_child <- 'TPM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=paste(score_name_child, 'histogram'),
xlab=score_name_child
)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child])),
add=T
)
score_name_child <- 'FTM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=paste(score_name_child, 'histogram'),
xlab=score_name_child
)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child])),
add=T
)
score_name_child <- 'FGM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=paste(score_name_child, 'histogram'),
xlab=score_name_child
)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child])),
add=T
)
str(compatibility)
hsit(compatibility[[1]][,'FGM'])
hist(compatibility[[1]][,'FGM'])
hist(compatibility[[1]][,'FGM'], breaks=20)
score_name_child <- 'FGM'
hist(comp_stack[,score_name_child], breaks=30, freq=F, main=paste(score_name_child, 'histogram'),
xlab=score_name_child,
ylab='frequency'
)
score_name_child <- 'FGM'
hist(comp_stack[,score_name_child], breaks=30,
freq=T,
main=paste(score_name_child, 'histogram'),
xlab=score_name_child
)
score_name_child <- 'FGM'
hist(comp_stack[,score_name_child]+80, breaks=30,
freq=T,
main=paste(score_name_child, 'histogram'),
xlab=score_name_child
)
score_name_child <- 'FGM'
hist(comp_stack[,score_name_child]+20, breaks=30,
freq=T,
main=paste(score_name_child, 'histogram'),
xlab=score_name_child
)
curve(dnorm(x, mean=mean(comp_stack[,score_name_child]), sd=sd(comp_stack[,score_name_child])),
add=T
)
# visualize regular and playoffs head_to_head, opponent_free
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'head to head\nRegular',
'Bayes Regular',
# 'opponent free\nPlayoffs',
'head to head\nPlayoffs',
'Bayes Playoffs'),
ylim=c(0,0.2), xlab='method', ylab='likelihood', main=paste0('Regular and Playoffs ', score_name_child)
)
# visualize regular and playoffs head_to_head, opponent_free
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'\nhead to head\nRegular',
'Bayes Regular',
# 'opponent free\nPlayoffs',
'\nhead to head\nPlayoffs',
'Bayes Playoffs'),
ylim=c(0,0.2), xlab='method', ylab='likelihood', main=paste0('Regular and Playoffs ', score_name_child)
)
# visualize regular and playoffs head_to_head, opponent_free
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'head to head\nRegular',
'Bayes Regular',
# 'opponent free\nPlayoffs',
'head to head\nPlayoffs',
'Bayes Playoffs'),
ylim=c(0,0.4), xlab='method', ylab='likelihood', main=paste0('Regular and Playoffs ', score_name_child)
)
# visualize regular and playoffs head_to_head, opponent_free
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'head to head\nRegular',
'Bayes Regular',
# 'opponent free\nPlayoffs',
'head to head\nPlayoffs',
'Bayes Playoffs'),
ylim=c(0,0.5), xlab='method', ylab='likelihood', main=paste0('Regular and Playoffs ', score_name_child)
)
# visua
# visualize regular and playoffs head_to_head, opponent_free
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'head to head\nRegular',
'Bayes Regular',
# 'opponent free\nPlayoffs',
'head to head\nPlayoffs',
'Bayes Playoffs'),
ylim=c(0,0.6), xlab='method', ylab='likelihood', main=paste0('Regular and Playoffs ', score_name_child)
)
-log(likelihood_htoh[,'FGM'])
mean(-log(likelihood_htoh[,'FGM']))
medoid(-log(likelihood_htoh[,'FGM']))
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40))
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), xlab='Aのシュート数（A対B）')
quartz()
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), xlab='Aのシュート数（A対B）')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), xlab='Aのシュート数（A対B）', '確率密度')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), xlab='Aのシュート数（A対B）', ylab='確率密度')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), main='Aのシュート数（対チームB）',xlab='シュート数', ylab='確率密度')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), main='チームAのシュート数（対チームB）',xlab='シュート数', ylab='確率密度')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40),xlab='シュート数', ylab='確率密度')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40),xlab='シュート数', ylab='確率密度')
quartz()
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40),xlab='シュート数', ylab='確率密度')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), ylab='確率密度')
quartz()
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), ylab='確率密度')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), xlab='',ylab='確率密度')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=10), xlim=c(0,40), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=10), xlim=c(0,40),ylim=c(0,0.3), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=10), xlim=c(0,40),ylim=c(0,0.02), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=10), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40),ylim=c(0,0.15), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=10), xlim=c(0,40),ylim=c(0,0.15), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=2), xlim=c(0,40),ylim=c(0,0.15), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=3), xlim=c(0,40),ylim=c(0,0.15), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40),ylim=c(0,0.15), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=10), xlim=c(0,40),ylim=c(0,0.15), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=10), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=2), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=5), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=30, sd=2), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=25, sd=5), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=12), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=8), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=25, sd=5), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=30, sd=2), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=25, sd=4), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=20, sd=8), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=30, sd=2), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
curve(dnorm(x, mean=25, sd=4), xlim=c(0,40),ylim=c(0,0.2), xlab='',ylab='')
quartz()
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'最尤推定',
'ベイズ推定',
# 'opponent free\nPlayoffs',
'最尤推定',
'ベイズ推定'),
ylim=c(0,0.6), xlab='method', ylab='likelihood', main=paste0('Regular and Playoffs ', score_name_child)
)
dev.off()
# visualize regular and playoffs head_to_head, opponent_free
quartz()
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'最尤推定',
'ベイズ推定',
# 'opponent free\nPlayoffs',
'最尤推定',
'ベイズ推定'),
ylim=c(0,0.6), xlab='method', ylab='likelihood', main=paste0('Regular and Playoffs ', score_name_child)
)
# visualize regular and playoffs head_to_head, opponent_free
quartz()
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'最尤推定',
'ベイズ推定',
# 'opponent free\nPlayoffs',
'最尤推定',
'ベイズ推定'),
ylim=c(0,0.6), xlab='', ylab='尤度', main=paste0('Regular and Playoffs ', score_name_child)
)
# visualize regular and playoffs head_to_head, opponent_free
quartz()
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
likelihood_htoh[,score_name_child],
likelihood_setBayes[,score_name_child],
# likelihood_of_p[,score_name_child],
likelihood_htoh_p[,score_name_child],
likelihood_setBayes_p[,score_name_child],
names=c(# 'opponent free\nRegular',
'最尤推定',
'ベイズ推定',
# 'opponent free\nPlayoffs',
'最尤推定',
'ベイズ推定'),
ylim=c(0,0.2), xlab='', ylab='尤度', main=paste0('Regular and Playoffs ', score_name_child)
)
hist(head_to_head[[1]][[2]][,'FGM'])
hist(head_to_head[[1]][[2]][,'FGM'], xlab=c(10,30))
hist(head_to_head[[1]][[2]][,'FGM'], xlim=c(10,30))
hist(head_to_head[[1]][[2]][,'FGM'], xlim=c(10,30), breaks=10)
hist(head_to_head[[1]][[2]][,'FGM'], xlim=c(10,30), breaks=100)
hist(head_to_head[[1]][[2]][,'FGM'], xlim=c(10,30), breaks=5)
hist(head_to_head[[1]][[2]][,'FGM'])
hist(head_to_head[[1]][[2]][,'FGM'], xlim=c(10,30), breaks=5)
head_to_head[[1]][[2]]
head_to_head[[1]][[2]][,'FGM']
(head_to_head[[1]][[2]][,'FGM']-25)*4
(head_to_head[[1]][[2]][,'FGM']-27)*4
(head_to_head[[1]][[2]][,'FGM']-27)*3.5
(head_to_head[[1]][[2]][,'FGM']-27)*3
hist((head_to_head[[1]][[2]][,'FGM']-27)*3)
hist((head_to_head[[1]][[2]][,'FGM']-27)*3, breaks=5)
hist((head_to_head[[1]][[2]][,'FGM']-27)*3, breaks=8)
hist((head_to_head[[1]][[2]][,'FGM']-27)*3, breaks=10)
hist((head_to_head[[1]][[2]][,'FGM']-27)*3, breaks=10, ylim=c(0,5))
hist((head_to_head[[1]][[2]][,'FGM']-25)*3, breaks=10, ylim=c(0,5))
(head_to_head[[1]][[2]][,'FGM']-25)*3.5
(head_to_head[[1]][[2]][,'FGM']-25)*3
(head_to_head[[1]][[2]][,'FGM']-25)*2
(head_to_head[[1]][[2]][,'FGM']-20)*2
(head_to_head[[1]][[2]][,'FGM']-23)*2
hist((head_to_head[[1]][[2]][,'FGM']-23)*2, breaks=10, ylim=c(0,5))
hist((head_to_head[[1]][[2]][,'FGM']-23)*2, breaks=10, ylim=c(0,5), xlim=c(10,30))
hist((head_to_head[[1]][[2]][,'FGM']-23)*2, breaks=10, ylim=c(0,5), xlim=c(10,30), xlab='', ylab='')
hist((head_to_head[[1]][[2]][,'FGM']-23)*2, breaks=10, ylim=c(0,5), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-23)*2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-20)*2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-30)*2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-26)*2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-27)*2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-27)*1.5, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-20)*1.5, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-23)*1.5, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-23)*1.3, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-23)*1.2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-25)*1.2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-27)*1.2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
hist((head_to_head[[1]][[2]][,'FGM']-20)*1.2, breaks=10, ylim=c(0,4), xlim=c(10,30), xlab='', ylab='', main='')
valid <- likelihood_setBayes_p-likelihood_htoh_p
head(valid)
str(likelihood_htoh_p)
str(likelihood_setBayes_p)
valid_setBayes_htoh <- likelihood_setBayes_p-likelihood_htoh_p
head(valid_setBayes_htoh)
head(valid_setBayes_htoh[,'FGM'])
mean(valid_setBayes_htoh[,'FGM'])
length(which(valid_setBayes_htoh[.'FGM']>0))
which(valid_setBayes_htoh[.'FGM']>0)
which(valid_setBayes_htoh[,'FGM']>0)
length(which(valid_setBayes_htoh[,'FGM']>0))
binom.test(length(which(valid_setBayes_htoh[,'FGM']>0)), length(valid_setBayes_htoh), 0.5)
binom.test(length(which(valid_setBayes_htoh[,'FGM']>0)), length(valid_setBayes_htoh[,'FGM']), 0.5)
playoffs_test <- function(method1, method2, score_name_child){
playoffs_testvec <- method1-method2
binom.test(length(which(playoffs_testvec[,score_name_child]>0)), length(playoffs_testvec[,score_name_child]), 0.5)
}
playoffs_test(likelihood_setBayes_p, likelihood_htoh_p, 'FGM')
playoffs_test(likelihood_setBayes_p, likelihood_of_p, 'FGM')
# visualize regular and playoffs head_to_head, opponent_free
quartz()
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
-log(likelihood_htoh[,score_name_child]),
-log(likelihood_setBayes[,score_name_child]),
# likelihood_of_p[,score_name_child],
-log(likelihood_htoh_p[,score_name_child]),
-log(likelihood_setBayes_p[,score_name_child]),
names=c(# 'opponent free\nRegular',
'最尤推定',
'ベイズ推定',
# 'opponent free\nPlayoffs',
'最尤推定',
'ベイズ推定'),
ylim=c(0,0.2), xlab='', ylab='負の対数尤度', main=paste0('Regular and Playoffs ', score_name_child)
)
# visualize regular and playoffs head_to_head, opponent_free
quartz()
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
-log(likelihood_htoh[,score_name_child]),
-log(likelihood_setBayes[,score_name_child]),
# likelihood_of_p[,score_name_child],
-log(likelihood_htoh_p[,score_name_child]),
-log(likelihood_setBayes_p[,score_name_child]),
names=c(# 'opponent free\nRegular',
'最尤推定',
'ベイズ推定',
# 'opponent free\nPlayoffs',
'最尤推定',
'ベイズ推定'),
# ylim=c(),
xlab='', ylab='負の対数尤度', main=paste0('Regular and Playoffs ', score_name_child)
)
# visualize regular and playoffs head_to_head, opponent_free
quartz()
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
-log(likelihood_htoh[,score_name_child]),
-log(likelihood_setBayes[,score_name_child]),
# likelihood_of_p[,score_name_child],
-log(likelihood_htoh_p[,score_name_child]),
-log(likelihood_setBayes_p[,score_name_child]),
names=c(# 'opponent free\nRegular',
'最尤推定',
'ベイズ推定',
# 'opponent free\nPlayoffs',
'最尤推定',
'ベイズ推定'),
ylim=c(0, 10),
xlab='', ylab='負の対数尤度', main=paste0('Regular and Playoffs ', score_name_child)
)
# visualize regular and playoffs head_to_head, opponent_free
quartz()
score_name_child <- 'FGM'
boxplot(
# likelihood_of[,score_name_child],
-log(likelihood_htoh[,score_name_child]),
-log(likelihood_setBayes[,score_name_child]),
# likelihood_of_p[,score_name_child],
-log(likelihood_htoh_p[,score_name_child]),
-log(likelihood_setBayes_p[,score_name_child]),
names=c(# 'opponent free\nRegular',
'最尤推定',
'ベイズ推定',
# 'opponent free\nPlayoffs',
'最尤推定',
'ベイズ推定'),
ylim=c(0, 50),
xlab='', ylab='負の対数尤度', main=paste0('Regular and Playoffs ', score_name_child)
)
load('git/Rworks/NBA/.RData')
t_idx
team_name
team_memnber
team_member
setwd('git/Rworks/NBA/')
getwd()
ls()
# import and preprocess NBA box score data
source('~/git/Rworks/NBA/import_NBAmember.R')
head_to_head_All[[1]][[2]][[3]]
head_to_head_All[[1]][[2]]
save(head_to_head_All, file='head_to_head.RData')
save(htoh_i_j, file='htoh_i_j.RData')
save(htoh_i, file='htoh_i.RData')
head(htoh_i[[1]])
head(htoh_i[[1]][1:20,])
htoh_i[[1]][1:20,]
str(NBA_MCMC_res)
NBA_MCMC_res <- load('NBA_MCMC_res.Rdata')
str(NBA_MCMC_res)
NBA_MCMC_res[[1]]
load('NBA_MCMC_res.Rdata')
str(NBA_MCMC_res)
